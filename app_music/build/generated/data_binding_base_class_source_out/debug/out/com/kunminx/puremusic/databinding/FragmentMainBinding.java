// Generated by data binding compiler. Do not edit!
package com.kunminx.puremusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.ListAdapter;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewpager.widget.ViewPager;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.tabs.TabLayout;
import com.kunminx.puremusic.R;
import com.kunminx.puremusic.ui.page.MainFragment;
import com.kunminx.puremusic.ui.state.MainViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentMainBinding extends ViewDataBinding {
  @NonNull
  public final AppBarLayout appbarLayout;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final CollapsingToolbarLayout collapseLayout;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final AppCompatImageView ivBg;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final AppCompatImageView ivIcon;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final AppCompatImageView ivMenu;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final AppCompatImageView ivSearch;

  @NonNull
  public final RecyclerView rv;

  @NonNull
  public final TabLayout tabLayout;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final ConstraintLayout toolbar;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final TextView tvApp;

  @NonNull
  public final ViewPager viewPager;

  @NonNull
  public final WebView webView;

  @Bindable
  protected MainFragment.ClickProxy mClick;

  @Bindable
  protected MainViewModel mVm;

  @Bindable
  protected ListAdapter mAdapter;

  protected FragmentMainBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppBarLayout appbarLayout, CollapsingToolbarLayout collapseLayout, AppCompatImageView ivBg,
      AppCompatImageView ivIcon, AppCompatImageView ivMenu, AppCompatImageView ivSearch,
      RecyclerView rv, TabLayout tabLayout, ConstraintLayout toolbar, TextView tvApp,
      ViewPager viewPager, WebView webView) {
    super(_bindingComponent, _root, _localFieldCount);
    this.appbarLayout = appbarLayout;
    this.collapseLayout = collapseLayout;
    this.ivBg = ivBg;
    this.ivIcon = ivIcon;
    this.ivMenu = ivMenu;
    this.ivSearch = ivSearch;
    this.rv = rv;
    this.tabLayout = tabLayout;
    this.toolbar = toolbar;
    this.tvApp = tvApp;
    this.viewPager = viewPager;
    this.webView = webView;
  }

  public abstract void setClick(@Nullable MainFragment.ClickProxy click);

  @Nullable
  public MainFragment.ClickProxy getClick() {
    return mClick;
  }

  public abstract void setVm(@Nullable MainViewModel vm);

  @Nullable
  public MainViewModel getVm() {
    return mVm;
  }

  public abstract void setAdapter(@Nullable ListAdapter adapter);

  @Nullable
  public ListAdapter getAdapter() {
    return mAdapter;
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_main, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentMainBinding>inflateInternal(inflater, R.layout.fragment_main, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_main, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentMainBinding>inflateInternal(inflater, R.layout.fragment_main, null, false, component);
  }

  public static FragmentMainBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentMainBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentMainBinding)bind(component, view, R.layout.fragment_main);
  }
}
