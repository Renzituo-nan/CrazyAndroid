// Generated by data binding compiler. Do not edit!
package com.kunminx.puremusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.kunminx.puremusic.R;
import com.kunminx.puremusic.data.bean.TestAlbum;
import java.lang.Deprecated;
import java.lang.Object;
import net.steamcrafted.materialiconlib.MaterialIconView;

public abstract class AdapterPlayItemBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatImageView ivCover;

  @NonNull
  public final MaterialIconView ivPlayStatus;

  @NonNull
  public final ConstraintLayout rootView;

  @NonNull
  public final TextView tvArtist;

  @NonNull
  public final TextView tvTitle;

  @Bindable
  protected TestAlbum.TestMusic mAlbum;

  protected AdapterPlayItemBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppCompatImageView ivCover, MaterialIconView ivPlayStatus, ConstraintLayout rootView,
      TextView tvArtist, TextView tvTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.ivCover = ivCover;
    this.ivPlayStatus = ivPlayStatus;
    this.rootView = rootView;
    this.tvArtist = tvArtist;
    this.tvTitle = tvTitle;
  }

  public abstract void setAlbum(@Nullable TestAlbum.TestMusic album);

  @Nullable
  public TestAlbum.TestMusic getAlbum() {
    return mAlbum;
  }

  @NonNull
  public static AdapterPlayItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.adapter_play_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static AdapterPlayItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<AdapterPlayItemBinding>inflateInternal(inflater, R.layout.adapter_play_item, root, attachToRoot, component);
  }

  @NonNull
  public static AdapterPlayItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.adapter_play_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static AdapterPlayItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<AdapterPlayItemBinding>inflateInternal(inflater, R.layout.adapter_play_item, null, false, component);
  }

  public static AdapterPlayItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static AdapterPlayItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (AdapterPlayItemBinding)bind(component, view, R.layout.adapter_play_item);
  }
}
